<?xml version="1.0" encoding="UTF-8"?>

<component author="xavier.guerin@imag.fr" unique="true" wrapper="false">

  <id name="DnaCore" short_name="Core" version="1.0"/>

  <provide>

    <!-- Component hooks -->

    <method name="core_create" return_type="status_t"/>
    <method name="core_destroy" return_type="status_t"/>
    <method name="core_start" return_type="status_t"/>
    <method name="core_stop" return_type="status_t"/>

    <!-- Interrupt management -->

    <method name="interrupt_attach" return_type="status_t">
      <argument name="id" type="interrupt_id_t" direction="in"/>
      <argument name="mode" type="uint32_t" direction="in"/>
      <argument name="handler" type="interrupt_handler_t" direction="in"/>
    </method>

    <method name="interrupt_detach" return_type="status_t">
      <argument name="id" type="interrupt_id_t" direction="in"/>
      <argument name="handler" type="interrupt_handler_t" direction="in"/>
    </method>

    <!-- Lock management -->

    <type name="spinlock_t"/>

    <method name="lock_acquire" return_type="void">
      <argument name="lock" type="spinlock_t" direction="inout"/>
    </method>

    <method name="lock_release" return_type="void">
      <argument name="lock" type="spinlock_t" direction="inout"/>
    </method>

    <!-- Semaphore management -->

    <definition name="DNA_NO_RESCHEDULE"/>
    <definition name="DNA_RELATIVE_TIMER"/>
    <definition name="DNA_ABSOLUTE_TIMER"/>

    <type name="semaphore_info_t"/>

    <method name="semaphore_create" return_type="int32_t">
      <argument name="name" type="string" direction="in"/>
      <argument name="tokens" type="int32_t" direction="in"/>
    </method>

    <method name="semaphore_destroy" return_type="status_t">
      <argument name="sid" type="int32_t" direction="in"/>
    </method>

    <method name="semaphore_acquire" return_type="status_t">
      <argument name="sid" type="int32_t" direction="in"/>
      <argument name="flags" type="int32_t" direction="in"/>
      <argument name="timeout" type="bigtime_t" direction="in"/>
    </method>

    <method name="semaphore_release" return_type="status_t">
      <argument name="sid" type="int32_t" direction="in"/>
      <argument name="n_tokens" type="int32_t" direction="in"/>
      <argument name="flags" type="int32_t" direction="in"/>
    </method>

    <method name="semaphore_get_info" return_type="status_t">
      <argument name="sid" type="int32_t" direction="in"/>
      <argument name="info" type="semaphore_info_t" direction="out"/>
    </method>

    <!-- Thread management -->

    <type name="thread_info_t"/>
    <type name="thread_handler_t"/>

    <method name="thread_create" return_type="int32_t">
      <argument name="handler" type="thread_handler_t" direction="in"/>
      <argument name="arguments" type="void" direction="in"/>
      <argument name="name" type="string" direction="in"/>
      <argument name="affinity" type="int32_t" direction="in"/>
      <argument name="stack_size" type="int32_t" direction="in"/>
    </method>

    <method name="thread_snooze" return_type="status_t">
      <argument name="value" type="bigtime_t" direction="in"/>
    </method>

    <method name="thread_suspend" return_type="status_t">
      <argument name="id" type="int32_t" direction="in"/>
    </method>

    <method name="thread_resume" return_type="status_t">
      <argument name="id" type="int32_t" direction="in"/>
    </method>

    <method name="thread_wait" return_type="status_t">
      <argument name="id" type="int32_t" direction="in"/>
      <argument name="value" type="int32_t" direction="out"/>
    </method>

    <method name="thread_yield" return_type="status_t">
    </method>

    <method name="thread_exit" return_type="void">
      <argument name="value" type="int32_t" direction="in"/>
    </method>

    <method name="thread_find" return_type="int32_t">
      <argument name="name" type="string" direction="in"/>
    </method>

    <method name="thread_get_info" return_type="status_t">
      <argument name="id" type="int32_t" direction="in"/>
      <argument name="info" type="thread_info_t" direction="out"/>
    </method>

    <!-- Time management -->

    <definition name="DNA_PERIODIC_ALARM"/>
    <definition name="DNA_ONE_SHOT_ALARM"/>
    <definition name="DNA_RELATIVE_ALARM"/>
    <definition name="DNA_ABSOLUTE_ALARM"/>

    <type name="bigtime_t"/>
    <type name="alarm_callback_t"/>

    <method name="time_ticker" return_type="void">
      <argument name="value" type="bigtime_t" direction="in"/>
    </method>

    <method name="time_set_alarm" return_type="int32_t">
      <argument name="deadline" type="bigtime_t" direction="in"/>
      <argument name="mode" type="int32_t" direction="in"/>
      <argument name="callback" type="alarm_callback_t" direction="in"/>
      <argument name="data" type="access" direction="in"/>
    </method>

    <method name="time_cancel_alarm" return_type="status_t">
      <argument name="alarm" type="int32_t" direction="in"/>
    </method>

    <method name="time_reset_alarm" return_type="status_t">
      <argument name="alarm" type="int32_t" direction="in"/>
    </method>
  </provide>

  <require>

    <!-- context hooks -->

    <method name="cpu_context_init" return_type="">
      <argument name="context" type="cpu_context_t" direction="out"/>
      <argument name="stack" type="access" direction="in"/>
      <argument name="size" type="int32_t" direction="in"/>
      <argument name="entry" type="access function" direction="in"/>
      <argument name="arguments" type="access generic" direction="in"/>
    </method>

    <method name="cpu_context_load" return_type="">
      <argument name="context" type="cpu_context_t" direction="in"/>
    </method>

    <method name="cpu_context_save" return_type="">
      <argument name="context" type="cpu_context_t" direction="out"/>
    </method>

    <!-- Interrupt hooks -->

    <type name="interrupt_id_t"/>

    <type name="interrupt_status_t"/>

    <type name="interrupt_handler_t"/>

    <type name="exception_id_t"/>

    <type name="exception_handler_t"/>

    <definition name="CPU_N_IT"/>
 
    <method name="cpu_trap_attach_esr" return_type="">
      <argument name="id" type="exception_id_t" direction="in"/>
      <argument name="handler" type="exception_handler_t" direction="in"/>
    </method>

    <method name="cpu_trap_attach_isr" return_type="">
      <argument name="id" type="interrupt_id_t" direction="in"/>
      <argument name="handler" type="interrupt_handler_t" direction="in"/>
    </method>

    <method name="cpu_trap_mask_and_backup" return_type="interrupt_status_t"/>

    <method name="cpu_trap_restore" return_type="">
      <argument name="status" type="interrupt_status_t" direction="in"/>
    </method>

    <method name="cpu_trap_enable" return_type="">
      <argument name="id" type="interrupt_id_t" direction="in"/>
    </method>

    <method name="cpu_trap_disable" return_type="">
      <argument name="id" type="interrupt_id_t" direction="in"/>
    </method>

    <!-- Multiprocessor hooks -->

    <method name="cpu_mp_count" return_type="int32_t"/>

    <method name="cpu_mp_id" return_type="int32_t"/>

    <!-- Synchronization hooks -->

    <method name="cpu_test_and_set" return_type="int32_t">
      <argument name="lock" type="int32_t" direction="inout"/>
    </method>

    <!-- FDArray hooks -->

    <method name="fdarray_create" return_type="status_t">
      <argument name="id" type="int32_t" direction="in"/>
      <argument name="parent" type="int32_t" direction="in"/>
    </method>

    <method name="fdarray_destroy" return_type="status_t">
      <argument name="id" type="int32_t" direction="in"/>
    </method>

    <!-- Memory hooks -->

    <method name="kernel_malloc" return_type="access">
      <argument name="size" type="int32_t" direction="in"/>
      <argument name="erase" type="boolean" direction="in"/>
    </method>

    <method name="kernel_free" return_type="status_t">
      <argument name="area" type="access" direction="in"/>
    </method>

    <!-- Configuration hooks -->

    <definition name="DNA_NAME_LENGTH"/>

  </require>

</component>
