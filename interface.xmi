<?xml version="1.0" encoding="UTF-8"?>
<APES:Interface
  xmlns:xmi="http://www.omg.org/XMI"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:APES="http://www.ocm.org/APES"
  xsi:schemaLocation="http://www.ocm.org/APES APESInterface.ecore"
  author="xavier.guerin@imag.fr"
  unique="true"
  wrapper="false">

  <id name="DnaCore" short_name="Core" version="1.0"/>

  <provide>
    <context name="LifeCycle">
      <method name="core_create" visibility="Public" result="status_t"/>
      <method name="core_destroy" visibility="Public" result="status_t"/>
      <method name="core_start" visibility="Public" result="status_t"/>
      <method name="core_stop" visibility="Public" result="status_t"/>
    </context>

    <context name="Interrupts">
      <method name="interrupt_attach" visibility="Public" result="status_t">
        <argument name="id" type="interrupt_id_t" direction="In"/>
        <argument name="mode" type="uint32_t" direction="In"/>
        <argument name="handler" type="interrupt_handler_t" direction="In"/>
        <argument name="bypass_demux" type="boolean" direction="In"/>
      </method>

      <method name="interrupt_detach" visibility="Public" result="status_t">
        <argument name="id" type="interrupt_id_t" direction="In"/>
        <argument name="handler" type="interrupt_handler_t" direction="In"/>
      </method>

      <method name="ipi_callback" visibility="Public" result="">
        <argument name="command" type="int32_t" direction="In"/>
        <argument name="data" type="access" direction="In"/>
      </method>
    </context>

    <context name="Locks">
      <type name="spinlock_t" visibility="Public"/>

      <method name="lock_create" visibility="Public" result="status_t">
        <argument name="lock" type="spinlock_t" direction="Out"/>
      </method>

      <method name="lock_destroy" visibility="Public" result="void">
        <argument name="lock" type="spinlock_t" direction="Out"/>
      </method>

      <method name="lock_acquire" visibility="Public" result="void">
        <argument name="lock" type="spinlock_t" direction="InOut"/>
      </method>

      <method name="lock_release" visibility="Public" result="void">
        <argument name="lock" type="spinlock_t" direction="InOut"/>
      </method>
    </context>
    <!--
    <context name="Semaphores">
      <definition name="DNA_NO_RESCHEDULE"/>
      <definition name="DNA_RELATIVE_TIMER"/>
      <definition name="DNA_ABSOLUTE_TIMER"/>

      <type name="semaphore_info_t"/>

      <method name="semaphore_create" result="int32_t">
        <argument name="name" type="string" direction="In"/>
        <argument name="tokens" type="int32_t" direction="In"/>
      </method>

      <method name="semaphore_destroy" result="status_t">
        <argument name="sid" type="int32_t" direction="In"/>
      </method>

      <method name="semaphore_acquire" result="status_t">
        <argument name="sid" type="int32_t" direction="In"/>
        <argument name="tokens" type="int32_t" direction="In"/>
        <argument name="flags" type="int32_t" direction="In"/>
        <argument name="timeout" type="bigtime_t" direction="In"/>
      </method>

      <method name="semaphore_release" result="status_t">
        <argument name="sid" type="int32_t" direction="In"/>
        <argument name="n_tokens" type="int32_t" direction="In"/>
        <argument name="flags" type="int32_t" direction="In"/>
      </method>

      <method name="semaphore_get_info" result="status_t">
        <argument name="sid" type="int32_t" direction="In"/>
        <argument name="info" type="semaphore_info_t" direction="Out"/>
      </method>
    </context>

    <context name="Threads">
      <type name="thread_info_t"/>
      <type name="thread_handler_t"/>

      <method name="thread_create" result="int32_t">
        <argument name="handler" type="thread_handler_t" direction="In"/>
        <argument name="arguments" type="void" direction="In"/>
        <argument name="name" type="string" direction="In"/>
        <argument name="group" type="int32_t" direction="In"/>
        <argument name="affinity" type="int32_t" direction="In"/>
        <argument name="stack_base" type="access" direction="In"/>
        <argument name="stack_size" type="int32_t" direction="In"/>
      </method>

      <method name="thread_snooze" result="status_t">
        <argument name="value" type="bigtime_t" direction="In"/>
      </method>

      <method name="thread_suspend" result="status_t">
        <argument name="id" type="int32_t" direction="In"/>
      </method>

      <method name="thread_resume" result="status_t">
        <argument name="id" type="int32_t" direction="In"/>
      </method>

      <method name="thread_wait" result="status_t">
        <argument name="id" type="int32_t" direction="In"/>
        <argument name="value" type="int32_t" direction="Out"/>
      </method>

      <method name="thread_yield" result="status_t">
      </method>

      <method name="thread_exit" result="void">
        <argument name="value" type="int32_t" direction="In"/>
      </method>

      <method name="thread_find" result="int32_t">
        <argument name="name" type="string" direction="In"/>
      </method>

      <method name="thread_get_info" result="status_t">
        <argument name="id" type="int32_t" direction="In"/>
        <argument name="info" type="thread_info_t" direction="Out"/>
      </method>
    </context>


    <context name="Alarms">
      <definition name="DNA_PERIODIC_ALARM"/>
      <definition name="DNA_ONE_SHOT_ALARM"/>
      <definition name="DNA_RELATIVE_ALARM"/>
      <definition name="DNA_ABSOLUTE_ALARM"/>

      <type name="alarm_callback_t"/>

      <method name="alarm_create" result="int32_t">
        <argument name="deadline" type="bigtime_t" direction="In"/>
        <argument name="mode" type="int32_t" direction="In"/>
        <argument name="callback" type="alarm_callback_t" direction="In"/>
        <argument name="data" type="access" direction="In"/>
      </method>

      <method name="alarm_destroy" result="status_t">
        <argument name="alarm" type="int32_t" direction="In"/>
      </method>

      <method name="timer_callback" result=""/>
    </context>

    -->
  </provide>

</APES:Interface>
